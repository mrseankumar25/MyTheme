window.theme = window.theme || {};

theme.formatCurrency = (cents, format) => {
  if (typeof cents == 'string') { cents = cents.replace('.',''); }
  var value = '';
  var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
  var formatString = (format || this.money_format);

  function defaultOption(opt, def) {
     return (typeof opt == 'undefined' ? def : opt);
  }

  function formatWithDelimiters(number, precision, thousands, decimal) {
    precision = defaultOption(precision, 2);
    thousands = defaultOption(thousands, ',');
    decimal   = defaultOption(decimal, '.');

    if (isNaN(number) || number == null) { return 0; }

    number = (number/100.0).toFixed(precision);

    var parts   = number.split('.'),
        dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
        cents   = parts[1] ? (decimal + parts[1]) : '';

    return dollars + cents;
  }

  switch(formatString.match(placeholderRegex)[1]) {
    case 'amount':
      value = formatWithDelimiters(cents, 2);
      break;
    case 'amount_no_decimals':
      value = formatWithDelimiters(cents, 0);
      break;
    case 'amount_with_comma_separator':
      value = formatWithDelimiters(cents, 2, '.', ',');
      break;
    case 'amount_no_decimals_with_comma_separator':
      value = formatWithDelimiters(cents, 0, '.', ',');
      break;
  }

  return formatString.replace(placeholderRegex, value);
};

theme.getCart = async (type = 'success') => {
	let cartItems = '';
	if(type == 'success') {
		const req = await fetch('/cart.json', {
			method: "GET",
			headers: {
				"Content-type": "application/json"
			}
		});
		const { items } = await req.json();

		cartItems = `<div class="cartPopupItem">
			<div calss="cartPopupProductImage"><img src="${ items[0].featured_image.url }"></div>
			<div class="cartPopupProductInfo">
				<div class="cartPopupProductTitle">${ items[0].title }</div>
				<div class="cartPopupProductPrice">${ items[0].quantity } x ${ theme.formatCurrency(items[0].price, theme.moneyFormat) }</div>
				</div>
				</div>`
			} else {
				cartItems = `<div class="cartPopupItem">
				<div class="cartPopupProductInfo">
				<div class="cartPopupProductTitle">${ type }</div>
				<div class="cartPopupProductPrice">Something Happmed Please try Again after sometime.</div>
			</div>
		</div>`
	}

	const cartPopup = `<div class="cartPopup">
		<div class="cartPopupBody">${ cartItems }</div>
		${ type == 'success' ?
			`<div cartPopupFooter>
				<a href="{{ routes.cart_url }}" class="siteBtn black-bt">View Cart</a>
			</div>`
		: '' }
	</div>`;

	jQuery('body').prepend(cartPopup);

	setTimeout(function() {
		jQuery(document).find('.cartPopup').remove();
	}, 3000)
}

theme.addToCart = async (items) => {
	const req = await fetch('/cart/add.json', {
		method: "POST",
		headers: {
			"Content-type": "application/json"
		},
		body: JSON.stringify(items)
	});
	const res = await req.json();

	if(res.errors) {
		theme.getCart(res.errors)
	} else {
		theme.getCart('success')
	}
	console.info(res);
}

(function($) {
	/* Preloader */
	$(window).on('load', function() {
		$("#preloader").delay(600).fadeOut();
	});

	/* Scrollspy */
	$('body').scrollspy({
		target: '#nav',
		offset: $(window).height() / 2
	});

	/* Btn Nav Collapse */
	$('#nav .nav-collapse').on('click', function() {
		$('#nav').toggleClass('open');
	});

	/* Mobile Dropdown */
	$('.has-dropdown a').on('click', function() {
		$(this).parent().toggleClass('open-drop');
	});

	/* On Scroll */
	$(window).on('scroll', function() {
		var wScroll = $(this).scrollTop(),
			wHeight = $(window).height();

		// Fixed nav
		wScroll > 1 ? $('#nav').addClass('fixed-nav') : $('#nav').removeClass('fixed-nav');

		// Back To Top Appear
		wScroll > (wHeight / 2) ? $('#back-to-top').fadeIn() : $('#back-to-top').fadeOut();
	});

	/* Magnific Popup */
	$('.imageContainer').magnificPopup({
		delegate: '.lightbox',
		type: 'image'
	});

	/* Testimonial Slider */
	$('#testimonialContainer').owlCarousel({
		autoplay: true,
		dots: true,
		items:1,
		loop: true,
		margin: 0,
		nav: false,
	});

	$('select:not(.hide)').select2();
	$('#Preference').select2({
		placeholder: 'Preference For 1st Call',
		allowClear: true
	});
	$('#Important').select2({
		placeholder: 'Most Important For You',
		allowClear: true
	});
	$('#AgeProfile').select2({
		placeholder: 'Age Profile',
		allowClear: true
	});
	$('#WhyUs').select2({
		placeholder: 'Why Us',
		allowClear: true
	});
	$('#AboutUs').select2({
		placeholder: 'How Hear About Us',
		allowClear: true
	});

	jQuery('.addToCartForm').on('submit', function(e) {
			if(jQuery(this).data('ajax')) {
				e.preventDefault();
				const formData = {
					"items": [
						{
							"id": jQuery(this).find('input[name="id"]').val(),
							"quantity": jQuery(this).find('input[name="quantity"]').val()
						}
					]
				}

				theme.addToCart(formData);
			} else {
				jQuery(this).submit();
			};
	})
})(jQuery);
